//
// Messages (Nano specific) for KeepKey Communication
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.16.0
// source: messages-nano.proto

package kkproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//*
// Request: Ask device for Nano address corresponding to address_n path
// @next PassphraseRequest
// @next NanoAddress
// @next Failure
type NanoGetAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressN    []uint32 `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"` // BIP-32 path to derive the key from master node
	CoinName    *string  `protobuf:"bytes,2,opt,name=coin_name,json=coinName,def=Nano" json:"coin_name,omitempty"`
	ShowDisplay *bool    `protobuf:"varint,3,opt,name=show_display,json=showDisplay" json:"show_display,omitempty"` // optionally show on display before sending the result
}

// Default values for NanoGetAddress fields.
const (
	Default_NanoGetAddress_CoinName = string("Nano")
)

func (x *NanoGetAddress) Reset() {
	*x = NanoGetAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_nano_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NanoGetAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NanoGetAddress) ProtoMessage() {}

func (x *NanoGetAddress) ProtoReflect() protoreflect.Message {
	mi := &file_messages_nano_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NanoGetAddress.ProtoReflect.Descriptor instead.
func (*NanoGetAddress) Descriptor() ([]byte, []int) {
	return file_messages_nano_proto_rawDescGZIP(), []int{0}
}

func (x *NanoGetAddress) GetAddressN() []uint32 {
	if x != nil {
		return x.AddressN
	}
	return nil
}

func (x *NanoGetAddress) GetCoinName() string {
	if x != nil && x.CoinName != nil {
		return *x.CoinName
	}
	return Default_NanoGetAddress_CoinName
}

func (x *NanoGetAddress) GetShowDisplay() bool {
	if x != nil && x.ShowDisplay != nil {
		return *x.ShowDisplay
	}
	return false
}

//*
// Response: Contains a Nano address derived from device private seed
// @prev NanoGetAddress
type NanoAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *string `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"` // Coin address in Base58 encoding
}

func (x *NanoAddress) Reset() {
	*x = NanoAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_nano_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NanoAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NanoAddress) ProtoMessage() {}

func (x *NanoAddress) ProtoReflect() protoreflect.Message {
	mi := &file_messages_nano_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NanoAddress.ProtoReflect.Descriptor instead.
func (*NanoAddress) Descriptor() ([]byte, []int) {
	return file_messages_nano_proto_rawDescGZIP(), []int{1}
}

func (x *NanoAddress) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

//*
// Request: ask device to sign Nano transaction
// @start
// @next NanoSignedTx
type NanoSignTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressN       []uint32                `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"` // BIP-32 path to derive the key from master node
	CoinName       *string                 `protobuf:"bytes,2,opt,name=coin_name,json=coinName,def=Nano" json:"coin_name,omitempty"`
	ParentBlock    *NanoSignTx_ParentBlock `protobuf:"bytes,3,opt,name=parent_block,json=parentBlock" json:"parent_block,omitempty"`
	LinkHash       []byte                  `protobuf:"bytes,4,opt,name=link_hash,json=linkHash" json:"link_hash,omitempty"`
	LinkRecipient  *string                 `protobuf:"bytes,5,opt,name=link_recipient,json=linkRecipient" json:"link_recipient,omitempty"`
	LinkRecipientN []uint32                `protobuf:"varint,6,rep,name=link_recipient_n,json=linkRecipientN" json:"link_recipient_n,omitempty"` // BIP-32 path to derive address for recipient
	Representative *string                 `protobuf:"bytes,7,opt,name=representative" json:"representative,omitempty"`
	Balance        []byte                  `protobuf:"bytes,8,opt,name=balance" json:"balance,omitempty"`                               // uint128 (big-endian encoded)
	ExchangeType   *ExchangeType           `protobuf:"bytes,9,opt,name=exchange_type,json=exchangeType" json:"exchange_type,omitempty"` // exchange type data
}

// Default values for NanoSignTx fields.
const (
	Default_NanoSignTx_CoinName = string("Nano")
)

func (x *NanoSignTx) Reset() {
	*x = NanoSignTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_nano_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NanoSignTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NanoSignTx) ProtoMessage() {}

func (x *NanoSignTx) ProtoReflect() protoreflect.Message {
	mi := &file_messages_nano_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NanoSignTx.ProtoReflect.Descriptor instead.
func (*NanoSignTx) Descriptor() ([]byte, []int) {
	return file_messages_nano_proto_rawDescGZIP(), []int{2}
}

func (x *NanoSignTx) GetAddressN() []uint32 {
	if x != nil {
		return x.AddressN
	}
	return nil
}

func (x *NanoSignTx) GetCoinName() string {
	if x != nil && x.CoinName != nil {
		return *x.CoinName
	}
	return Default_NanoSignTx_CoinName
}

func (x *NanoSignTx) GetParentBlock() *NanoSignTx_ParentBlock {
	if x != nil {
		return x.ParentBlock
	}
	return nil
}

func (x *NanoSignTx) GetLinkHash() []byte {
	if x != nil {
		return x.LinkHash
	}
	return nil
}

func (x *NanoSignTx) GetLinkRecipient() string {
	if x != nil && x.LinkRecipient != nil {
		return *x.LinkRecipient
	}
	return ""
}

func (x *NanoSignTx) GetLinkRecipientN() []uint32 {
	if x != nil {
		return x.LinkRecipientN
	}
	return nil
}

func (x *NanoSignTx) GetRepresentative() string {
	if x != nil && x.Representative != nil {
		return *x.Representative
	}
	return ""
}

func (x *NanoSignTx) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *NanoSignTx) GetExchangeType() *ExchangeType {
	if x != nil {
		return x.ExchangeType
	}
	return nil
}

//*
// Response: signature for transaction
// @end
type NanoSignedTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=signature" json:"signature,omitempty"`
	BlockHash []byte `protobuf:"bytes,2,opt,name=block_hash,json=blockHash" json:"block_hash,omitempty"`
}

func (x *NanoSignedTx) Reset() {
	*x = NanoSignedTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_nano_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NanoSignedTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NanoSignedTx) ProtoMessage() {}

func (x *NanoSignedTx) ProtoReflect() protoreflect.Message {
	mi := &file_messages_nano_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NanoSignedTx.ProtoReflect.Descriptor instead.
func (*NanoSignedTx) Descriptor() ([]byte, []int) {
	return file_messages_nano_proto_rawDescGZIP(), []int{3}
}

func (x *NanoSignedTx) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *NanoSignedTx) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

type NanoSignTx_ParentBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentHash     []byte  `protobuf:"bytes,1,opt,name=parent_hash,json=parentHash" json:"parent_hash,omitempty"`
	Link           []byte  `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
	Representative *string `protobuf:"bytes,4,opt,name=representative" json:"representative,omitempty"`
	Balance        []byte  `protobuf:"bytes,5,opt,name=balance" json:"balance,omitempty"` // uint128 (big-endian encoded)
}

func (x *NanoSignTx_ParentBlock) Reset() {
	*x = NanoSignTx_ParentBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_nano_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NanoSignTx_ParentBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NanoSignTx_ParentBlock) ProtoMessage() {}

func (x *NanoSignTx_ParentBlock) ProtoReflect() protoreflect.Message {
	mi := &file_messages_nano_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NanoSignTx_ParentBlock.ProtoReflect.Descriptor instead.
func (*NanoSignTx_ParentBlock) Descriptor() ([]byte, []int) {
	return file_messages_nano_proto_rawDescGZIP(), []int{2, 0}
}

func (x *NanoSignTx_ParentBlock) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *NanoSignTx_ParentBlock) GetLink() []byte {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *NanoSignTx_ParentBlock) GetRepresentative() string {
	if x != nil && x.Representative != nil {
		return *x.Representative
	}
	return ""
}

func (x *NanoSignTx_ParentBlock) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

var File_messages_nano_proto protoreflect.FileDescriptor

var file_messages_nano_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2d, 0x6e, 0x61, 0x6e, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x73, 0x0a, 0x0e, 0x4e, 0x61, 0x6e, 0x6f, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4e, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x3a, 0x04, 0x4e, 0x61, 0x6e, 0x6f, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x27, 0x0a, 0x0b, 0x4e, 0x61, 0x6e, 0x6f, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0xf3, 0x03, 0x0a, 0x0a, 0x4e, 0x61, 0x6e, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x78, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x12, 0x21, 0x0a, 0x09,
	0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x3a,
	0x04, 0x4e, 0x61, 0x6e, 0x6f, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3a, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4e, 0x61, 0x6e, 0x6f, 0x53, 0x69, 0x67, 0x6e,
	0x54, 0x78, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x6c, 0x69, 0x6e, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a,
	0x84, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x4b, 0x0a, 0x0c, 0x4e, 0x61, 0x6e, 0x6f, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x54, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x42, 0x30, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x65, 0x65, 0x70, 0x6b,
	0x65, 0x79, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x42, 0x12, 0x4b, 0x65, 0x65, 0x70, 0x4b, 0x65, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4e, 0x61, 0x6e, 0x6f,
}

var (
	file_messages_nano_proto_rawDescOnce sync.Once
	file_messages_nano_proto_rawDescData = file_messages_nano_proto_rawDesc
)

func file_messages_nano_proto_rawDescGZIP() []byte {
	file_messages_nano_proto_rawDescOnce.Do(func() {
		file_messages_nano_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_nano_proto_rawDescData)
	})
	return file_messages_nano_proto_rawDescData
}

var file_messages_nano_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_messages_nano_proto_goTypes = []interface{}{
	(*NanoGetAddress)(nil),         // 0: NanoGetAddress
	(*NanoAddress)(nil),            // 1: NanoAddress
	(*NanoSignTx)(nil),             // 2: NanoSignTx
	(*NanoSignedTx)(nil),           // 3: NanoSignedTx
	(*NanoSignTx_ParentBlock)(nil), // 4: NanoSignTx.ParentBlock
	(*ExchangeType)(nil),           // 5: ExchangeType
}
var file_messages_nano_proto_depIdxs = []int32{
	4, // 0: NanoSignTx.parent_block:type_name -> NanoSignTx.ParentBlock
	5, // 1: NanoSignTx.exchange_type:type_name -> ExchangeType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_messages_nano_proto_init() }
func file_messages_nano_proto_init() {
	if File_messages_nano_proto != nil {
		return
	}
	file_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_messages_nano_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NanoGetAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_nano_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NanoAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_nano_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NanoSignTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_nano_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NanoSignedTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_nano_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NanoSignTx_ParentBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_nano_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_nano_proto_goTypes,
		DependencyIndexes: file_messages_nano_proto_depIdxs,
		MessageInfos:      file_messages_nano_proto_msgTypes,
	}.Build()
	File_messages_nano_proto = out.File
	file_messages_nano_proto_rawDesc = nil
	file_messages_nano_proto_goTypes = nil
	file_messages_nano_proto_depIdxs = nil
}
